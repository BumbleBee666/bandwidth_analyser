// First we need to create the jenkins network.
docker network create jenkins

// Then we need to build our Jenkins image, ready to build the project.
// Create a Dockerfile with ..
FROM jenkins/jenkins:2.303.1-jdk11
USER root
RUN apt-get update && apt-get install -y apt-transport-https \
       ca-certificates curl gnupg2 \
       software-properties-common
RUN curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add -
RUN apt-key fingerprint 0EBFCD88
RUN add-apt-repository \
       "deb [arch=arm64] https://download.docker.com/linux/debian \
       $(lsb_release -cs) stable"
RUN apt-get update && apt-get install -y docker-ce-cli
RUN apt-get update && apt-get install -y build-essential libgtk-3-dev
RUN apt-get update && apt-get install -y meson ninja-build
RUN apt-get update && apt-get install -y pkg-config
RUN apt-get update && apt-get install -y cmake
USER jenkins
RUN jenkins-plugin-cli --plugins "blueocean:1.25.0 docker-workflow:1.26"

// Then we build the image itself ..
docker build -t myjenkins-blueocean:1.1 .

// Then we run the image ..
// Note that we pass the bandwidth data directory as a volume.
docker run --name jenkins-blueocean --rm --detach   --network jenkins --env DOCKER_HOST=tcp://docker:2376   --env DOCKER_CERT_PATH=/certs/client --env DOCKER_TLS_VERIFY=1   --publish 8080:8080 --publish 50000:50000   --volume jenkins-data:/var/jenkins_home   --volume jenkins-docker-certs:/certs/client:ro -e DISPLAY=$DISPLAY -v /tmp/.X11-unix:/tmp/.X11-unix -v /home/mark/Documents/bandwidth:/bandwidth -v /var/run/docker.sock:/var/run/docker.sock myjenkins-blueocean:1.1

// You can access the docker instance running Jenkins with ..
docker exec -it jenkins-blueocean bash

// The jenkins instance is visable at http://localhost:8080

// The instance needs to be unlocked initially by entering the password that can be found (within the docker instance) at ..
/var/jenkins_home/secrets/initialAdminPassword
